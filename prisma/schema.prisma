generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id        String   @id @default(uuid())
  fullname  String
  email     String   @unique
  username  String
  password  String
  posts     Post[]
  followers Follow[] @relation("FollowFollower")
  following Follow[] @relation("FollowFollowing")
}

model Follow {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  followerId  String
  follower    User     @relation("FollowFollower", fields: [followerId], references: [id])
  followingId String
  following   User     @relation("FollowFollowing", fields: [followingId], references: [id])
}

model Post {
  id        String    @id @default(uuid())
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    String
  likes     Like[]
  comment   Comment[]
  retweet   Retweet[]
  user      User      @relation(fields: [userId], references: [id])
}

model Comment {
  id             String           @id @default(uuid())
  content        String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  userId         String
  postId         String
  post           Post             @relation(fields: [postId], references: [id])
  LikeComment    LikeComment[]
  RetweetComment RetweetComment[]
}

model Like {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  userId    String
  postId    String
  post      Post     @relation(fields: [postId], references: [id])
}

model Retweet {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  userId    String
  postId    String
  post      Post     @relation(fields: [postId], references: [id])
}

model LikeComment {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  userId    String
  commentId String
  comment   Comment  @relation(fields: [commentId], references: [id])
}

model RetweetComment {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  userId    String
  commentId String
  comment   Comment  @relation(fields: [commentId], references: [id])
}
